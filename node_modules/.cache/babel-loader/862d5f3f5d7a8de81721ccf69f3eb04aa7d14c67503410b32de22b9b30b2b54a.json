{"ast":null,"code":"var _jsxFileName = \"C:\\\\ajay\\\\GSIV23_Ajay_Chittiganapur\\\\src\\\\components\\\\Movies.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchData } from '../redux/action';\nimport { useNavigate } from 'react-router-dom';\nimport { Button, Grid, Typography } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Movies = ({\n  data,\n  loading,\n  error,\n  fetchData\n}) => {\n  _s();\n  var _ref;\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [more, setMore] = useState();\n  const [MovieList, setMovieList] = useState([]);\n  const navigate = useNavigate();\n  const apiKey = \"7426638854526acbcbeee04b541684a4\";\n  const Movie = async () => {\n    try {\n      const response = await axios.get(`https://api.themoviedb.org/3/movie/upcoming?api_key=${apiKey}&language=en-US&page=1`);\n      setMovieList(response.data.results);\n      // dispatch(fetchDataSuccess(response.data.results));\n    } catch (error) {\n      // dispatch(fetchDataFailure(error.message));\n    }\n  };\n  useEffect(() => {\n    console.log(\"Movies\");\n    Movie();\n    // fetchData(); // Fetch data when the component mounts\n  }, []);\n  const loadMoreNews = () => {\n    const load = rowsPerPage + 5;\n    console.log(\"load:\", load, \"rowsPerPage:\", rowsPerPage);\n    setRowsPerPage(load);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movieDiv\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-list\",\n      children: [(_ref = rowsPerPage > 0 ? MovieList === null || MovieList === void 0 ? void 0 : MovieList.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage) : MovieList) === null || _ref === void 0 ? void 0 : _ref.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-card\",\n        onClick: () => navigate(`/details`, {\n          state: {\n            movie\n          }\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://image.tmdb.org/t/p/w200/${movie.poster_path}`,\n          alt: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          sx: {\n            p: 1\n          }\n          //  className=\"movie-info\"\n          ,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            sm: 12,\n            xs: 12,\n            align: \"right\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                fontSize: '0.8em'\n              },\n              children: [\"Rating: \", movie.vote_average, \"/10\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            sm: 12,\n            xs: 12,\n            className: \"movieTital\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"movie-description\",\n            children: movie.overview\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 33\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 29\n      }, this)), MovieList.length <= rowsPerPage ? /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 12,\n        md: 12,\n        xs: 12,\n        lg: 12,\n        className: \"more\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"No More Movie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 12,\n        md: 12,\n        xs: 12,\n        lg: 12,\n        className: \"more\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"more\",\n          onClick: loadMoreNews,\n          children: \"Load More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n// const mapStateToProps = state => ({\n//     data: state.data,\n//     loading: state.loading,\n//     error: state.error\n// });\n\n// const mapDispatchToProps = {\n//     fetchData\n// };\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Movies);\n_s(Movies, \"TV174grWTiLJ/eRsHIbIKIkBgaM=\", false, function () {\n  return [useNavigate];\n});\n_c = Movies;\nexport default Movies;\nvar _c;\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["React","useEffect","useState","connect","fetchData","useNavigate","Button","Grid","Typography","axios","jsxDEV","_jsxDEV","Movies","data","loading","error","_s","_ref","page","setPage","rowsPerPage","setRowsPerPage","more","setMore","MovieList","setMovieList","navigate","apiKey","Movie","response","get","results","console","log","loadMoreNews","load","className","children","slice","map","movie","onClick","state","src","poster_path","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","container","sx","p","sm","xs","align","fontSize","vote_average","variant","overview","id","length","item","md","lg","_c","$RefreshReg$"],"sources":["C:/ajay/GSIV23_Ajay_Chittiganapur/src/components/Movies.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchData } from '../redux/action';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Button, Grid, Typography } from '@mui/material';\r\nimport axios from 'axios';\r\n\r\nconst Movies = ({ data, loading, error, fetchData }) => {\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n    const [more, setMore] = useState()\r\n    const [MovieList, setMovieList] = useState([])\r\n\r\n    const navigate = useNavigate();\r\n    const apiKey = \"7426638854526acbcbeee04b541684a4\"\r\n    const Movie = async () => {\r\n        try {\r\n            const response = await axios.get(`https://api.themoviedb.org/3/movie/upcoming?api_key=${apiKey}&language=en-US&page=1`\r\n            );\r\n            setMovieList(response.data.results)\r\n            // dispatch(fetchDataSuccess(response.data.results));\r\n        } catch (error) {\r\n            // dispatch(fetchDataFailure(error.message));\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        console.log(\"Movies\")\r\n\r\n        Movie()\r\n        // fetchData(); // Fetch data when the component mounts\r\n    }, []);\r\n\r\n    const loadMoreNews = () => {\r\n        const load = rowsPerPage + 5\r\n        console.log(\"load:\", load, \"rowsPerPage:\", rowsPerPage)\r\n        setRowsPerPage(load)\r\n    }\r\n\r\n    return (\r\n        <div className='movieDiv'>\r\n\r\n            <div className=\"movie-list\">\r\n                {\r\n                    (rowsPerPage > 0\r\n                        ? MovieList?.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                        : MovieList\r\n                    )\r\n                        ?.map(movie => (\r\n                            <div key={movie.id} className=\"movie-card\" onClick={() => navigate(`/details`, { state: { movie } })}>\r\n                                <img src={`https://image.tmdb.org/t/p/w200/${movie.poster_path}`} alt={movie.title} />\r\n                                <Grid container sx={{ p: 1 }}\r\n                                //  className=\"movie-info\"\r\n                                >\r\n                                    <Grid sm={12} xs={12} align='right'>\r\n                                        <Typography sx={{ fontSize: '0.8em' }}>Rating: {movie.vote_average}/10</Typography>\r\n                                    </Grid>\r\n                                    <Grid sm={12} xs={12} className='movieTital' >\r\n                                        <Typography variant='h6'>{movie.title}</Typography>\r\n                                    </Grid>\r\n\r\n                                    <p className=\"movie-description\">{movie.overview}</p>\r\n                                </Grid>\r\n                            </div>\r\n                        ))}\r\n\r\n                {MovieList.length <= rowsPerPage ?\r\n\r\n                    <Grid item sm={12} md={12} xs={12} lg={12} className='more'>\r\n                        <Typography>No More Movie</Typography>\r\n                        {/* <Button className='more' onClick={loadMoreNews}>Load More</Button> */}\r\n                    </Grid>\r\n                    : <Grid item sm={12} md={12} xs={12} lg={12} className='more'>\r\n                        <Button className='more' onClick={loadMoreNews}>Load More</Button>\r\n                    </Grid>\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// const mapStateToProps = state => ({\r\n//     data: state.data,\r\n//     loading: state.loading,\r\n//     error: state.error\r\n// });\r\n\r\n// const mapDispatchToProps = {\r\n//     fetchData\r\n// };\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Movies);\r\nexport default Movies"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}